//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DuoSoftware.DuoSoftPhone.refCommonData {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonDataRecord", Namespace="http://schemas.datacontract.org/2004/07/Duosoftware.Duobase.Contracts")]
    [System.SerializableAttribute()]
    public partial class CommonDataRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CacheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DuoSoftware.DuoSoftPhone.refCommonData.CommonDataField[] CommonDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DuoSoftware.DuoSoftPhone.refCommonData.CommonDataApps[] CommonDataAppsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DuoSoftware.DuoSoftPhone.refCommonData.CommonDataValue[] CommonDataValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GuTranIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordCultureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RecordStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SeparateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenantIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViewObjectIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Cache {
            get {
                return this.CacheField;
            }
            set {
                if ((this.CacheField.Equals(value) != true)) {
                    this.CacheField = value;
                    this.RaisePropertyChanged("Cache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DuoSoftware.DuoSoftPhone.refCommonData.CommonDataField[] CommonData {
            get {
                return this.CommonDataField;
            }
            set {
                if ((object.ReferenceEquals(this.CommonDataField, value) != true)) {
                    this.CommonDataField = value;
                    this.RaisePropertyChanged("CommonData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DuoSoftware.DuoSoftPhone.refCommonData.CommonDataApps[] CommonDataApps {
            get {
                return this.CommonDataAppsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommonDataAppsField, value) != true)) {
                    this.CommonDataAppsField = value;
                    this.RaisePropertyChanged("CommonDataApps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DuoSoftware.DuoSoftPhone.refCommonData.CommonDataValue[] CommonDataValues {
            get {
                return this.CommonDataValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.CommonDataValuesField, value) != true)) {
                    this.CommonDataValuesField = value;
                    this.RaisePropertyChanged("CommonDataValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GuTranID {
            get {
                return this.GuTranIDField;
            }
            set {
                if ((this.GuTranIDField.Equals(value) != true)) {
                    this.GuTranIDField = value;
                    this.RaisePropertyChanged("GuTranID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationalStatus {
            get {
                return this.OperationalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationalStatusField, value) != true)) {
                    this.OperationalStatusField = value;
                    this.RaisePropertyChanged("OperationalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordCode {
            get {
                return this.RecordCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordCodeField, value) != true)) {
                    this.RecordCodeField = value;
                    this.RaisePropertyChanged("RecordCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordCultureName {
            get {
                return this.RecordCultureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordCultureNameField, value) != true)) {
                    this.RecordCultureNameField = value;
                    this.RaisePropertyChanged("RecordCultureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordName {
            get {
                return this.RecordNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordNameField, value) != true)) {
                    this.RecordNameField = value;
                    this.RaisePropertyChanged("RecordName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RecordStatus {
            get {
                return this.RecordStatusField;
            }
            set {
                if ((this.RecordStatusField.Equals(value) != true)) {
                    this.RecordStatusField = value;
                    this.RaisePropertyChanged("RecordStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordType {
            get {
                return this.RecordTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordTypeField, value) != true)) {
                    this.RecordTypeField = value;
                    this.RaisePropertyChanged("RecordType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Separate {
            get {
                return this.SeparateField;
            }
            set {
                if ((this.SeparateField.Equals(value) != true)) {
                    this.SeparateField = value;
                    this.RaisePropertyChanged("Separate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenantID {
            get {
                return this.TenantIDField;
            }
            set {
                if ((this.TenantIDField.Equals(value) != true)) {
                    this.TenantIDField = value;
                    this.RaisePropertyChanged("TenantID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewObjectID {
            get {
                return this.ViewObjectIDField;
            }
            set {
                if ((this.ViewObjectIDField.Equals(value) != true)) {
                    this.ViewObjectIDField = value;
                    this.RaisePropertyChanged("ViewObjectID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonDataField", Namespace="http://schemas.datacontract.org/2004/07/Duosoftware.Duobase.Contracts")]
    [System.SerializableAttribute()]
    public partial class CommonDataField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldCultureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DuoSoftware.DuoSoftPhone.refCommonData.CommonFieldValue[] FieldDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPrimaryKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> OnChangeToCultureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ScheduleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenantIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViewObjectIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldCultureName {
            get {
                return this.FieldCultureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldCultureNameField, value) != true)) {
                    this.FieldCultureNameField = value;
                    this.RaisePropertyChanged("FieldCultureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DuoSoftware.DuoSoftPhone.refCommonData.CommonFieldValue[] FieldData {
            get {
                return this.FieldDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldDataField, value) != true)) {
                    this.FieldDataField = value;
                    this.RaisePropertyChanged("FieldData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldType {
            get {
                return this.FieldTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldTypeField, value) != true)) {
                    this.FieldTypeField = value;
                    this.RaisePropertyChanged("FieldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPrimaryKey {
            get {
                return this.IsPrimaryKeyField;
            }
            set {
                if ((this.IsPrimaryKeyField.Equals(value) != true)) {
                    this.IsPrimaryKeyField = value;
                    this.RaisePropertyChanged("IsPrimaryKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> OnChangeToCulture {
            get {
                return this.OnChangeToCultureField;
            }
            set {
                if ((this.OnChangeToCultureField.Equals(value) != true)) {
                    this.OnChangeToCultureField = value;
                    this.RaisePropertyChanged("OnChangeToCulture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ScheduleID {
            get {
                return this.ScheduleIDField;
            }
            set {
                if ((this.ScheduleIDField.Equals(value) != true)) {
                    this.ScheduleIDField = value;
                    this.RaisePropertyChanged("ScheduleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenantID {
            get {
                return this.TenantIDField;
            }
            set {
                if ((this.TenantIDField.Equals(value) != true)) {
                    this.TenantIDField = value;
                    this.RaisePropertyChanged("TenantID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewObjectID {
            get {
                return this.ViewObjectIDField;
            }
            set {
                if ((this.ViewObjectIDField.Equals(value) != true)) {
                    this.ViewObjectIDField = value;
                    this.RaisePropertyChanged("ViewObjectID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonDataApps", Namespace="http://schemas.datacontract.org/2004/07/Duosoftware.Duobase.Contracts")]
    [System.SerializableAttribute()]
    public partial class CommonDataApps : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> GUApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RecordStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ScheduleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenantIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViewObjectIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationCode {
            get {
                return this.ApplicationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationCodeField, value) != true)) {
                    this.ApplicationCodeField = value;
                    this.RaisePropertyChanged("ApplicationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> GUApplicationID {
            get {
                return this.GUApplicationIDField;
            }
            set {
                if ((this.GUApplicationIDField.Equals(value) != true)) {
                    this.GUApplicationIDField = value;
                    this.RaisePropertyChanged("GUApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RecordStatus {
            get {
                return this.RecordStatusField;
            }
            set {
                if ((this.RecordStatusField.Equals(value) != true)) {
                    this.RecordStatusField = value;
                    this.RaisePropertyChanged("RecordStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ScheduleID {
            get {
                return this.ScheduleIDField;
            }
            set {
                if ((this.ScheduleIDField.Equals(value) != true)) {
                    this.ScheduleIDField = value;
                    this.RaisePropertyChanged("ScheduleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenantID {
            get {
                return this.TenantIDField;
            }
            set {
                if ((this.TenantIDField.Equals(value) != true)) {
                    this.TenantIDField = value;
                    this.RaisePropertyChanged("TenantID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewObjectID {
            get {
                return this.ViewObjectIDField;
            }
            set {
                if ((this.ViewObjectIDField.Equals(value) != true)) {
                    this.ViewObjectIDField = value;
                    this.RaisePropertyChanged("ViewObjectID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonDataValue", Namespace="http://schemas.datacontract.org/2004/07/Duosoftware.Duobase.Contracts")]
    [System.SerializableAttribute()]
    public partial class CommonDataValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RecordDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordFieldDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenantIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViewObjectIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RecordDataID {
            get {
                return this.RecordDataIDField;
            }
            set {
                if ((this.RecordDataIDField.Equals(value) != true)) {
                    this.RecordDataIDField = value;
                    this.RaisePropertyChanged("RecordDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordFieldData {
            get {
                return this.RecordFieldDataField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordFieldDataField, value) != true)) {
                    this.RecordFieldDataField = value;
                    this.RaisePropertyChanged("RecordFieldData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RowID {
            get {
                return this.RowIDField;
            }
            set {
                if ((this.RowIDField.Equals(value) != true)) {
                    this.RowIDField = value;
                    this.RaisePropertyChanged("RowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenantID {
            get {
                return this.TenantIDField;
            }
            set {
                if ((this.TenantIDField.Equals(value) != true)) {
                    this.TenantIDField = value;
                    this.RaisePropertyChanged("TenantID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewObjectID {
            get {
                return this.ViewObjectIDField;
            }
            set {
                if ((this.ViewObjectIDField.Equals(value) != true)) {
                    this.ViewObjectIDField = value;
                    this.RaisePropertyChanged("ViewObjectID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonFieldValue", Namespace="http://schemas.datacontract.org/2004/07/Duosoftware.Duobase.Contracts")]
    [System.SerializableAttribute()]
    public partial class CommonFieldValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FieldIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ScheduleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenantIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViewObjectIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> FieldId {
            get {
                return this.FieldIdField;
            }
            set {
                if ((this.FieldIdField.Equals(value) != true)) {
                    this.FieldIdField = value;
                    this.RaisePropertyChanged("FieldId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldKey {
            get {
                return this.FieldKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldKeyField, value) != true)) {
                    this.FieldKeyField = value;
                    this.RaisePropertyChanged("FieldKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldValue {
            get {
                return this.FieldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldValueField, value) != true)) {
                    this.FieldValueField = value;
                    this.RaisePropertyChanged("FieldValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ScheduleId {
            get {
                return this.ScheduleIdField;
            }
            set {
                if ((this.ScheduleIdField.Equals(value) != true)) {
                    this.ScheduleIdField = value;
                    this.RaisePropertyChanged("ScheduleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenantID {
            get {
                return this.TenantIDField;
            }
            set {
                if ((this.TenantIDField.Equals(value) != true)) {
                    this.TenantIDField = value;
                    this.RaisePropertyChanged("TenantID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewObjectId {
            get {
                return this.ViewObjectIdField;
            }
            set {
                if ((this.ViewObjectIdField.Equals(value) != true)) {
                    this.ViewObjectIdField = value;
                    this.RaisePropertyChanged("ViewObjectId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Column", Namespace="http://schemas.datacontract.org/2004/07/Duosoftware.Duobase.Contracts")]
    [System.SerializableAttribute()]
    public partial class Column : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicTable", Namespace="http://schemas.datacontract.org/2004/07/Duosoftware.Duobase.Contracts")]
    [System.SerializableAttribute()]
    public partial class DynamicTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DuoSoftware.DuoSoftPhone.refCommonData.Columns[] ColumnDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DuoSoftware.DuoSoftPhone.refCommonData.Columns[] ColumnDtl {
            get {
                return this.ColumnDtlField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnDtlField, value) != true)) {
                    this.ColumnDtlField = value;
                    this.RaisePropertyChanged("ColumnDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Columns", Namespace="http://schemas.datacontract.org/2004/07/Duosoftware.Duobase.Contracts")]
    [System.SerializableAttribute()]
    public partial class Columns : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowNullsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.SqlDbType DataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrimaryKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string columnLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string columnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string columnValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowNulls {
            get {
                return this.AllowNullsField;
            }
            set {
                if ((this.AllowNullsField.Equals(value) != true)) {
                    this.AllowNullsField = value;
                    this.RaisePropertyChanged("AllowNulls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.SqlDbType DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((this.DataTypeField.Equals(value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrimaryKey {
            get {
                return this.PrimaryKeyField;
            }
            set {
                if ((this.PrimaryKeyField.Equals(value) != true)) {
                    this.PrimaryKeyField = value;
                    this.RaisePropertyChanged("PrimaryKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string columnLength {
            get {
                return this.columnLengthField;
            }
            set {
                if ((object.ReferenceEquals(this.columnLengthField, value) != true)) {
                    this.columnLengthField = value;
                    this.RaisePropertyChanged("columnLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string columnName {
            get {
                return this.columnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.columnNameField, value) != true)) {
                    this.columnNameField = value;
                    this.RaisePropertyChanged("columnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string columnValue {
            get {
                return this.columnValueField;
            }
            set {
                if ((object.ReferenceEquals(this.columnValueField, value) != true)) {
                    this.columnValueField = value;
                    this.RaisePropertyChanged("columnValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataSetData", Namespace="http://schemas.datacontract.org/2004/07/Duosoftware.Duobase.Contracts")]
    [System.SerializableAttribute()]
    public partial class DataSetData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataXMLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DuoSoftware.DuoSoftPhone.refCommonData.DataTableInfo[] TablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataXML {
            get {
                return this.DataXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.DataXMLField, value) != true)) {
                    this.DataXMLField = value;
                    this.RaisePropertyChanged("DataXML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DuoSoftware.DuoSoftPhone.refCommonData.DataTableInfo[] Tables {
            get {
                return this.TablesField;
            }
            set {
                if ((object.ReferenceEquals(this.TablesField, value) != true)) {
                    this.TablesField = value;
                    this.RaisePropertyChanged("Tables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataTableInfo", Namespace="http://schemas.datacontract.org/2004/07/Duosoftware.Duobase.Contracts")]
    [System.SerializableAttribute()]
    public partial class DataTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DuoSoftware.DuoSoftPhone.refCommonData.DataColumnInfo[] DatasetColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatasetTableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DuoSoftware.DuoSoftPhone.refCommonData.DataColumnInfo[] DatasetColumns {
            get {
                return this.DatasetColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.DatasetColumnsField, value) != true)) {
                    this.DatasetColumnsField = value;
                    this.RaisePropertyChanged("DatasetColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatasetTableName {
            get {
                return this.DatasetTableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DatasetTableNameField, value) != true)) {
                    this.DatasetTableNameField = value;
                    this.RaisePropertyChanged("DatasetTableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataColumnInfo", Namespace="http://schemas.datacontract.org/2004/07/Duosoftware.Duobase.Contracts")]
    [System.SerializableAttribute()]
    public partial class DataColumnInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatasetColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatasetColumnTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatasetDataTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DatasetDisplayIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatasetEditControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DatasetIsKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DatasetIsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DatasetIsRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DatasetMaxLengthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatasetColumnName {
            get {
                return this.DatasetColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DatasetColumnNameField, value) != true)) {
                    this.DatasetColumnNameField = value;
                    this.RaisePropertyChanged("DatasetColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatasetColumnTitle {
            get {
                return this.DatasetColumnTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.DatasetColumnTitleField, value) != true)) {
                    this.DatasetColumnTitleField = value;
                    this.RaisePropertyChanged("DatasetColumnTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatasetDataTypeName {
            get {
                return this.DatasetDataTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DatasetDataTypeNameField, value) != true)) {
                    this.DatasetDataTypeNameField = value;
                    this.RaisePropertyChanged("DatasetDataTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DatasetDisplayIndex {
            get {
                return this.DatasetDisplayIndexField;
            }
            set {
                if ((this.DatasetDisplayIndexField.Equals(value) != true)) {
                    this.DatasetDisplayIndexField = value;
                    this.RaisePropertyChanged("DatasetDisplayIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatasetEditControlType {
            get {
                return this.DatasetEditControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DatasetEditControlTypeField, value) != true)) {
                    this.DatasetEditControlTypeField = value;
                    this.RaisePropertyChanged("DatasetEditControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DatasetIsKey {
            get {
                return this.DatasetIsKeyField;
            }
            set {
                if ((this.DatasetIsKeyField.Equals(value) != true)) {
                    this.DatasetIsKeyField = value;
                    this.RaisePropertyChanged("DatasetIsKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DatasetIsReadOnly {
            get {
                return this.DatasetIsReadOnlyField;
            }
            set {
                if ((this.DatasetIsReadOnlyField.Equals(value) != true)) {
                    this.DatasetIsReadOnlyField = value;
                    this.RaisePropertyChanged("DatasetIsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DatasetIsRequired {
            get {
                return this.DatasetIsRequiredField;
            }
            set {
                if ((this.DatasetIsRequiredField.Equals(value) != true)) {
                    this.DatasetIsRequiredField = value;
                    this.RaisePropertyChanged("DatasetIsRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DatasetMaxLength {
            get {
                return this.DatasetMaxLengthField;
            }
            set {
                if ((this.DatasetMaxLengthField.Equals(value) != true)) {
                    this.DatasetMaxLengthField = value;
                    this.RaisePropertyChanged("DatasetMaxLength");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="refCommonData.ICommonData")]
    public interface ICommonData {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/saveCommonDataRecord", ReplyAction="http://tempuri.org/ICommonData/saveCommonDataRecordResponse")]
        System.Collections.Generic.Dictionary<string, object> saveCommonDataRecord(DuoSoftware.DuoSoftPhone.refCommonData.CommonDataRecord recordData, string securityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/saveCommonDataRecord", ReplyAction="http://tempuri.org/ICommonData/saveCommonDataRecordResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>> saveCommonDataRecordAsync(DuoSoftware.DuoSoftPhone.refCommonData.CommonDataRecord recordData, string securityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/getSpecificCommonDataRecordByCode", ReplyAction="http://tempuri.org/ICommonData/getSpecificCommonDataRecordByCodeResponse")]
        DuoSoftware.DuoSoftPhone.refCommonData.CommonDataRecord getSpecificCommonDataRecordByCode(string recordCode, string securityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/getSpecificCommonDataRecordByCode", ReplyAction="http://tempuri.org/ICommonData/getSpecificCommonDataRecordByCodeResponse")]
        System.Threading.Tasks.Task<DuoSoftware.DuoSoftPhone.refCommonData.CommonDataRecord> getSpecificCommonDataRecordByCodeAsync(string recordCode, string securityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/getAllCommonDataRecords", ReplyAction="http://tempuri.org/ICommonData/getAllCommonDataRecordsResponse")]
        DuoSoftware.DuoSoftPhone.refCommonData.CommonDataRecord[] getAllCommonDataRecords(long sinceID, string securityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/getAllCommonDataRecords", ReplyAction="http://tempuri.org/ICommonData/getAllCommonDataRecordsResponse")]
        System.Threading.Tasks.Task<DuoSoftware.DuoSoftPhone.refCommonData.CommonDataRecord[]> getAllCommonDataRecordsAsync(long sinceID, string securityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/CreateTable", ReplyAction="http://tempuri.org/ICommonData/CreateTableResponse")]
        void CreateTable(DuoSoftware.DuoSoftPhone.refCommonData.DynamicTable TableData, string securityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/CreateTable", ReplyAction="http://tempuri.org/ICommonData/CreateTableResponse")]
        System.Threading.Tasks.Task CreateTableAsync(DuoSoftware.DuoSoftPhone.refCommonData.DynamicTable TableData, string securityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/InserTable", ReplyAction="http://tempuri.org/ICommonData/InserTableResponse")]
        void InserTable(string Query, string securityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/InserTable", ReplyAction="http://tempuri.org/ICommonData/InserTableResponse")]
        System.Threading.Tasks.Task InserTableAsync(string Query, string securityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/GetData", ReplyAction="http://tempuri.org/ICommonData/GetDataResponse")]
        System.Collections.Generic.Dictionary<string, object>[] GetData(string TableName, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/GetData", ReplyAction="http://tempuri.org/ICommonData/GetDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>[]> GetDataAsync(string TableName, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/CheckTableExists", ReplyAction="http://tempuri.org/ICommonData/CheckTableExistsResponse")]
        bool CheckTableExists(string TableName, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/CheckTableExists", ReplyAction="http://tempuri.org/ICommonData/CheckTableExistsResponse")]
        System.Threading.Tasks.Task<bool> CheckTableExistsAsync(string TableName, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/GetColumnData", ReplyAction="http://tempuri.org/ICommonData/GetColumnDataResponse")]
        System.Collections.Generic.Dictionary<string, object>[] GetColumnData(System.Collections.Generic.Dictionary<DuoSoftware.DuoSoftPhone.refCommonData.Column, DuoSoftware.DuoSoftPhone.refCommonData.Column> FirstSet, System.Collections.Generic.Dictionary<DuoSoftware.DuoSoftPhone.refCommonData.Column, DuoSoftware.DuoSoftPhone.refCommonData.Column> SecondSet, System.Collections.Generic.Dictionary<DuoSoftware.DuoSoftPhone.refCommonData.Column, DuoSoftware.DuoSoftPhone.refCommonData.Column> ThirdSet, string TableName, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/GetColumnData", ReplyAction="http://tempuri.org/ICommonData/GetColumnDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>[]> GetColumnDataAsync(System.Collections.Generic.Dictionary<DuoSoftware.DuoSoftPhone.refCommonData.Column, DuoSoftware.DuoSoftPhone.refCommonData.Column> FirstSet, System.Collections.Generic.Dictionary<DuoSoftware.DuoSoftPhone.refCommonData.Column, DuoSoftware.DuoSoftPhone.refCommonData.Column> SecondSet, System.Collections.Generic.Dictionary<DuoSoftware.DuoSoftPhone.refCommonData.Column, DuoSoftware.DuoSoftPhone.refCommonData.Column> ThirdSet, string TableName, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/GetAnyData", ReplyAction="http://tempuri.org/ICommonData/GetAnyDataResponse")]
        string[] GetAnyData(System.Collections.Generic.Dictionary<string, string> InputVal, string OutColumn, string TableName, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/GetAnyData", ReplyAction="http://tempuri.org/ICommonData/GetAnyDataResponse")]
        System.Threading.Tasks.Task<string[]> GetAnyDataAsync(System.Collections.Generic.Dictionary<string, string> InputVal, string OutColumn, string TableName, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/InsertData", ReplyAction="http://tempuri.org/ICommonData/InsertDataResponse")]
        void InsertData(DuoSoftware.DuoSoftPhone.refCommonData.DynamicTable TableData, string securityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/InsertData", ReplyAction="http://tempuri.org/ICommonData/InsertDataResponse")]
        System.Threading.Tasks.Task InsertDataAsync(DuoSoftware.DuoSoftPhone.refCommonData.DynamicTable TableData, string securityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/GetDataSetData", ReplyAction="http://tempuri.org/ICommonData/GetDataSetDataResponse")]
        DuoSoftware.DuoSoftPhone.refCommonData.DataSetData GetDataSetData(string SQL, int PageNumber, int PageSize, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/GetDataSetData", ReplyAction="http://tempuri.org/ICommonData/GetDataSetDataResponse")]
        System.Threading.Tasks.Task<DuoSoftware.DuoSoftPhone.refCommonData.DataSetData> GetDataSetDataAsync(string SQL, int PageNumber, int PageSize, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/UpdateDuobase", ReplyAction="http://tempuri.org/ICommonData/UpdateDuobaseResponse")]
        void UpdateDuobase(DuoSoftware.DuoSoftPhone.refCommonData.DataSetData data, string TableName, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/UpdateDuobase", ReplyAction="http://tempuri.org/ICommonData/UpdateDuobaseResponse")]
        System.Threading.Tasks.Task UpdateDuobaseAsync(DuoSoftware.DuoSoftPhone.refCommonData.DataSetData data, string TableName, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/UpdateData", ReplyAction="http://tempuri.org/ICommonData/UpdateDataResponse")]
        bool UpdateData(System.Collections.Generic.Dictionary<string, string> oldvalues, System.Collections.Generic.Dictionary<string, string> newvalues, string tablename, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/UpdateData", ReplyAction="http://tempuri.org/ICommonData/UpdateDataResponse")]
        System.Threading.Tasks.Task<bool> UpdateDataAsync(System.Collections.Generic.Dictionary<string, string> oldvalues, System.Collections.Generic.Dictionary<string, string> newvalues, string tablename, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/DeleteData", ReplyAction="http://tempuri.org/ICommonData/DeleteDataResponse")]
        bool DeleteData(System.Collections.Generic.Dictionary<string, string> values, string tablename, string SecurityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonData/DeleteData", ReplyAction="http://tempuri.org/ICommonData/DeleteDataResponse")]
        System.Threading.Tasks.Task<bool> DeleteDataAsync(System.Collections.Generic.Dictionary<string, string> values, string tablename, string SecurityToken);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommonDataChannel : DuoSoftware.DuoSoftPhone.refCommonData.ICommonData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommonDataClient : System.ServiceModel.ClientBase<DuoSoftware.DuoSoftPhone.refCommonData.ICommonData>, DuoSoftware.DuoSoftPhone.refCommonData.ICommonData {
        
        public CommonDataClient() {
        }
        
        public CommonDataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonDataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonDataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonDataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<string, object> saveCommonDataRecord(DuoSoftware.DuoSoftPhone.refCommonData.CommonDataRecord recordData, string securityToken) {
            return base.Channel.saveCommonDataRecord(recordData, securityToken);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>> saveCommonDataRecordAsync(DuoSoftware.DuoSoftPhone.refCommonData.CommonDataRecord recordData, string securityToken) {
            return base.Channel.saveCommonDataRecordAsync(recordData, securityToken);
        }
        
        public DuoSoftware.DuoSoftPhone.refCommonData.CommonDataRecord getSpecificCommonDataRecordByCode(string recordCode, string securityToken) {
            return base.Channel.getSpecificCommonDataRecordByCode(recordCode, securityToken);
        }
        
        public System.Threading.Tasks.Task<DuoSoftware.DuoSoftPhone.refCommonData.CommonDataRecord> getSpecificCommonDataRecordByCodeAsync(string recordCode, string securityToken) {
            return base.Channel.getSpecificCommonDataRecordByCodeAsync(recordCode, securityToken);
        }
        
        public DuoSoftware.DuoSoftPhone.refCommonData.CommonDataRecord[] getAllCommonDataRecords(long sinceID, string securityToken) {
            return base.Channel.getAllCommonDataRecords(sinceID, securityToken);
        }
        
        public System.Threading.Tasks.Task<DuoSoftware.DuoSoftPhone.refCommonData.CommonDataRecord[]> getAllCommonDataRecordsAsync(long sinceID, string securityToken) {
            return base.Channel.getAllCommonDataRecordsAsync(sinceID, securityToken);
        }
        
        public void CreateTable(DuoSoftware.DuoSoftPhone.refCommonData.DynamicTable TableData, string securityToken) {
            base.Channel.CreateTable(TableData, securityToken);
        }
        
        public System.Threading.Tasks.Task CreateTableAsync(DuoSoftware.DuoSoftPhone.refCommonData.DynamicTable TableData, string securityToken) {
            return base.Channel.CreateTableAsync(TableData, securityToken);
        }
        
        public void InserTable(string Query, string securityToken) {
            base.Channel.InserTable(Query, securityToken);
        }
        
        public System.Threading.Tasks.Task InserTableAsync(string Query, string securityToken) {
            return base.Channel.InserTableAsync(Query, securityToken);
        }
        
        public System.Collections.Generic.Dictionary<string, object>[] GetData(string TableName, string SecurityToken) {
            return base.Channel.GetData(TableName, SecurityToken);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>[]> GetDataAsync(string TableName, string SecurityToken) {
            return base.Channel.GetDataAsync(TableName, SecurityToken);
        }
        
        public bool CheckTableExists(string TableName, string SecurityToken) {
            return base.Channel.CheckTableExists(TableName, SecurityToken);
        }
        
        public System.Threading.Tasks.Task<bool> CheckTableExistsAsync(string TableName, string SecurityToken) {
            return base.Channel.CheckTableExistsAsync(TableName, SecurityToken);
        }
        
        public System.Collections.Generic.Dictionary<string, object>[] GetColumnData(System.Collections.Generic.Dictionary<DuoSoftware.DuoSoftPhone.refCommonData.Column, DuoSoftware.DuoSoftPhone.refCommonData.Column> FirstSet, System.Collections.Generic.Dictionary<DuoSoftware.DuoSoftPhone.refCommonData.Column, DuoSoftware.DuoSoftPhone.refCommonData.Column> SecondSet, System.Collections.Generic.Dictionary<DuoSoftware.DuoSoftPhone.refCommonData.Column, DuoSoftware.DuoSoftPhone.refCommonData.Column> ThirdSet, string TableName, string SecurityToken) {
            return base.Channel.GetColumnData(FirstSet, SecondSet, ThirdSet, TableName, SecurityToken);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>[]> GetColumnDataAsync(System.Collections.Generic.Dictionary<DuoSoftware.DuoSoftPhone.refCommonData.Column, DuoSoftware.DuoSoftPhone.refCommonData.Column> FirstSet, System.Collections.Generic.Dictionary<DuoSoftware.DuoSoftPhone.refCommonData.Column, DuoSoftware.DuoSoftPhone.refCommonData.Column> SecondSet, System.Collections.Generic.Dictionary<DuoSoftware.DuoSoftPhone.refCommonData.Column, DuoSoftware.DuoSoftPhone.refCommonData.Column> ThirdSet, string TableName, string SecurityToken) {
            return base.Channel.GetColumnDataAsync(FirstSet, SecondSet, ThirdSet, TableName, SecurityToken);
        }
        
        public string[] GetAnyData(System.Collections.Generic.Dictionary<string, string> InputVal, string OutColumn, string TableName, string SecurityToken) {
            return base.Channel.GetAnyData(InputVal, OutColumn, TableName, SecurityToken);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAnyDataAsync(System.Collections.Generic.Dictionary<string, string> InputVal, string OutColumn, string TableName, string SecurityToken) {
            return base.Channel.GetAnyDataAsync(InputVal, OutColumn, TableName, SecurityToken);
        }
        
        public void InsertData(DuoSoftware.DuoSoftPhone.refCommonData.DynamicTable TableData, string securityToken) {
            base.Channel.InsertData(TableData, securityToken);
        }
        
        public System.Threading.Tasks.Task InsertDataAsync(DuoSoftware.DuoSoftPhone.refCommonData.DynamicTable TableData, string securityToken) {
            return base.Channel.InsertDataAsync(TableData, securityToken);
        }
        
        public DuoSoftware.DuoSoftPhone.refCommonData.DataSetData GetDataSetData(string SQL, int PageNumber, int PageSize, string SecurityToken) {
            return base.Channel.GetDataSetData(SQL, PageNumber, PageSize, SecurityToken);
        }
        
        public System.Threading.Tasks.Task<DuoSoftware.DuoSoftPhone.refCommonData.DataSetData> GetDataSetDataAsync(string SQL, int PageNumber, int PageSize, string SecurityToken) {
            return base.Channel.GetDataSetDataAsync(SQL, PageNumber, PageSize, SecurityToken);
        }
        
        public void UpdateDuobase(DuoSoftware.DuoSoftPhone.refCommonData.DataSetData data, string TableName, string SecurityToken) {
            base.Channel.UpdateDuobase(data, TableName, SecurityToken);
        }
        
        public System.Threading.Tasks.Task UpdateDuobaseAsync(DuoSoftware.DuoSoftPhone.refCommonData.DataSetData data, string TableName, string SecurityToken) {
            return base.Channel.UpdateDuobaseAsync(data, TableName, SecurityToken);
        }
        
        public bool UpdateData(System.Collections.Generic.Dictionary<string, string> oldvalues, System.Collections.Generic.Dictionary<string, string> newvalues, string tablename, string SecurityToken) {
            return base.Channel.UpdateData(oldvalues, newvalues, tablename, SecurityToken);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateDataAsync(System.Collections.Generic.Dictionary<string, string> oldvalues, System.Collections.Generic.Dictionary<string, string> newvalues, string tablename, string SecurityToken) {
            return base.Channel.UpdateDataAsync(oldvalues, newvalues, tablename, SecurityToken);
        }
        
        public bool DeleteData(System.Collections.Generic.Dictionary<string, string> values, string tablename, string SecurityToken) {
            return base.Channel.DeleteData(values, tablename, SecurityToken);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDataAsync(System.Collections.Generic.Dictionary<string, string> values, string tablename, string SecurityToken) {
            return base.Channel.DeleteDataAsync(values, tablename, SecurityToken);
        }
    }
}
