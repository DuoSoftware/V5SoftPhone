//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DuoSoftware.DuoSoftPhone.RefFramework {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RefFramework.IUiAccessService")]
    public interface IUiAccessService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUiAccessService/SendDataToAgent", ReplyAction="http://tempuri.org/IUiAccessService/SendDataToAgentResponse")]
        void SendDataToAgent(string securityToken, System.Collections.Generic.Dictionary<string, object> agentInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUiAccessService/SendDataToAgent", ReplyAction="http://tempuri.org/IUiAccessService/SendDataToAgentResponse")]
        System.Threading.Tasks.Task SendDataToAgentAsync(string securityToken, System.Collections.Generic.Dictionary<string, object> agentInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUiAccessService/InvokeCommandByAgent", ReplyAction="http://tempuri.org/IUiAccessService/InvokeCommandByAgentResponse")]
        void InvokeCommandByAgent(string securityToken, string agentName, string command, System.Collections.Generic.Dictionary<string, object> commandData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUiAccessService/InvokeCommandByAgent", ReplyAction="http://tempuri.org/IUiAccessService/InvokeCommandByAgentResponse")]
        System.Threading.Tasks.Task InvokeCommandByAgentAsync(string securityToken, string agentName, string command, System.Collections.Generic.Dictionary<string, object> commandData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUiAccessService/InvokeCommandByUser", ReplyAction="http://tempuri.org/IUiAccessService/InvokeCommandByUserResponse")]
        void InvokeCommandByUser(string securityToken, string userName, string command, System.Collections.Generic.Dictionary<string, object> commandData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUiAccessService/InvokeCommandByUser", ReplyAction="http://tempuri.org/IUiAccessService/InvokeCommandByUserResponse")]
        System.Threading.Tasks.Task InvokeCommandByUserAsync(string securityToken, string userName, string command, System.Collections.Generic.Dictionary<string, object> commandData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUiAccessService/InvokeCommandByGuUserId", ReplyAction="http://tempuri.org/IUiAccessService/InvokeCommandByGuUserIdResponse")]
        void InvokeCommandByGuUserId(string securityToken, string guUserId, string command, System.Collections.Generic.Dictionary<string, object> commandData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUiAccessService/InvokeCommandByGuUserId", ReplyAction="http://tempuri.org/IUiAccessService/InvokeCommandByGuUserIdResponse")]
        System.Threading.Tasks.Task InvokeCommandByGuUserIdAsync(string securityToken, string guUserId, string command, System.Collections.Generic.Dictionary<string, object> commandData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUiAccessService/InvokeCommandBySecurityToken", ReplyAction="http://tempuri.org/IUiAccessService/InvokeCommandBySecurityTokenResponse")]
        void InvokeCommandBySecurityToken(string securityToken, string command, System.Collections.Generic.Dictionary<string, object> commandData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUiAccessService/InvokeCommandBySecurityToken", ReplyAction="http://tempuri.org/IUiAccessService/InvokeCommandBySecurityTokenResponse")]
        System.Threading.Tasks.Task InvokeCommandBySecurityTokenAsync(string securityToken, string command, System.Collections.Generic.Dictionary<string, object> commandData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUiAccessService/InvokeClientCommandFromBackend", ReplyAction="http://tempuri.org/IUiAccessService/InvokeClientCommandFromBackendResponse")]
        void InvokeClientCommandFromBackend(string securityToken, string agentCode, string command, System.Collections.Generic.Dictionary<string, object> commandData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUiAccessService/InvokeClientCommandFromBackend", ReplyAction="http://tempuri.org/IUiAccessService/InvokeClientCommandFromBackendResponse")]
        System.Threading.Tasks.Task InvokeClientCommandFromBackendAsync(string securityToken, string agentCode, string command, System.Collections.Generic.Dictionary<string, object> commandData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUiAccessServiceChannel : DuoSoftware.DuoSoftPhone.RefFramework.IUiAccessService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UiAccessServiceClient : System.ServiceModel.ClientBase<DuoSoftware.DuoSoftPhone.RefFramework.IUiAccessService>, DuoSoftware.DuoSoftPhone.RefFramework.IUiAccessService {
        
        public UiAccessServiceClient() {
        }
        
        public UiAccessServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UiAccessServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UiAccessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UiAccessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendDataToAgent(string securityToken, System.Collections.Generic.Dictionary<string, object> agentInformation) {
            base.Channel.SendDataToAgent(securityToken, agentInformation);
        }
        
        public System.Threading.Tasks.Task SendDataToAgentAsync(string securityToken, System.Collections.Generic.Dictionary<string, object> agentInformation) {
            return base.Channel.SendDataToAgentAsync(securityToken, agentInformation);
        }
        
        public void InvokeCommandByAgent(string securityToken, string agentName, string command, System.Collections.Generic.Dictionary<string, object> commandData) {
            base.Channel.InvokeCommandByAgent(securityToken, agentName, command, commandData);
        }
        
        public System.Threading.Tasks.Task InvokeCommandByAgentAsync(string securityToken, string agentName, string command, System.Collections.Generic.Dictionary<string, object> commandData) {
            return base.Channel.InvokeCommandByAgentAsync(securityToken, agentName, command, commandData);
        }
        
        public void InvokeCommandByUser(string securityToken, string userName, string command, System.Collections.Generic.Dictionary<string, object> commandData) {
            base.Channel.InvokeCommandByUser(securityToken, userName, command, commandData);
        }
        
        public System.Threading.Tasks.Task InvokeCommandByUserAsync(string securityToken, string userName, string command, System.Collections.Generic.Dictionary<string, object> commandData) {
            return base.Channel.InvokeCommandByUserAsync(securityToken, userName, command, commandData);
        }
        
        public void InvokeCommandByGuUserId(string securityToken, string guUserId, string command, System.Collections.Generic.Dictionary<string, object> commandData) {
            base.Channel.InvokeCommandByGuUserId(securityToken, guUserId, command, commandData);
        }
        
        public System.Threading.Tasks.Task InvokeCommandByGuUserIdAsync(string securityToken, string guUserId, string command, System.Collections.Generic.Dictionary<string, object> commandData) {
            return base.Channel.InvokeCommandByGuUserIdAsync(securityToken, guUserId, command, commandData);
        }
        
        public void InvokeCommandBySecurityToken(string securityToken, string command, System.Collections.Generic.Dictionary<string, object> commandData) {
            base.Channel.InvokeCommandBySecurityToken(securityToken, command, commandData);
        }
        
        public System.Threading.Tasks.Task InvokeCommandBySecurityTokenAsync(string securityToken, string command, System.Collections.Generic.Dictionary<string, object> commandData) {
            return base.Channel.InvokeCommandBySecurityTokenAsync(securityToken, command, commandData);
        }
        
        public void InvokeClientCommandFromBackend(string securityToken, string agentCode, string command, System.Collections.Generic.Dictionary<string, object> commandData) {
            base.Channel.InvokeClientCommandFromBackend(securityToken, agentCode, command, commandData);
        }
        
        public System.Threading.Tasks.Task InvokeClientCommandFromBackendAsync(string securityToken, string agentCode, string command, System.Collections.Generic.Dictionary<string, object> commandData) {
            return base.Channel.InvokeClientCommandFromBackendAsync(securityToken, agentCode, command, commandData);
        }
    }
}
